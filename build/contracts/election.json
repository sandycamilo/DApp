{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_candidateid",
          "type": "uint256"
        }
      ],
      "name": "eventVote",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "candidatecount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_candidateid",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Voting.sol"
  },
  "ast": {
    "absolutePath": "contracts/Voting.sol",
    "exportedSymbols": {
      "Election": [
        95
      ]
    },
    "id": 96,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 95,
        "linearizedBaseContracts": [
          95
        ],
        "name": "Election",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Election.Candidate",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 8,
                "src": "79:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "79:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 8,
                "src": "96:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "96:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "voteCount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 8,
                "src": "117:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "117:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nodeType": "StructDefinition",
            "scope": 95,
            "src": "53:85:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3477ee2e",
            "id": 12,
            "mutability": "mutable",
            "name": "candidates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 95,
            "src": "148:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$8_storage_$",
              "typeString": "mapping(uint256 => struct Election.Candidate)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "157:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "148:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$8_storage_$",
                "typeString": "mapping(uint256 => struct Election.Candidate)"
              },
              "valueType": {
                "contractScope": null,
                "id": 10,
                "name": "Candidate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 8,
                "src": "165:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$8_storage_ptr",
                  "typeString": "struct Election.Candidate"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c8b94d69",
            "id": 14,
            "mutability": "mutable",
            "name": "candidatecount",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 95,
            "src": "199:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "199:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "af0dbe54",
            "id": 18,
            "mutability": "mutable",
            "name": "voter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 95,
            "src": "231:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 15,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "240:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "231:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 16,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "251:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22,
            "name": "eventVote",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_candidateid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 22,
                  "src": "305:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "295:45:0"
            },
            "src": "280:61:0"
          },
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "371:67:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "416c696365",
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "394:7:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "id": 25,
                      "name": "addCandidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "381:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "381:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "381:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "426f62",
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "425:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "id": 29,
                      "name": "addCandidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "412:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "412:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "412:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 34,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:2:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "371:0:0"
            },
            "scope": 95,
            "src": "351:87:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "498:107:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "508:16:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "candidatecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "508:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "508:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "534:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$8_storage_$",
                          "typeString": "mapping(uint256 => struct Election.Candidate storage ref)"
                        }
                      },
                      "id": 44,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "candidatecount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "545:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "534:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$8_storage",
                        "typeString": "struct Election.Candidate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "candidatecount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "573:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 47,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "589:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "596:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 45,
                        "name": "Candidate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "563:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Candidate_$8_storage_ptr_$",
                          "typeString": "type(struct Election.Candidate storage pointer)"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "563:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$8_memory_ptr",
                        "typeString": "struct Election.Candidate memory"
                      }
                    },
                    "src": "534:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Candidate_$8_storage",
                      "typeString": "struct Election.Candidate storage ref"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "534:64:0"
                }
              ]
            },
            "documentation": null,
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCandidate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 53,
                  "src": "470:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:21:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:0:0"
            },
            "scope": 95,
            "src": "448:157:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "654:250:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "672:18:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "673:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 62,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 60,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "679:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "679:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "673:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "664:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "664:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "664:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 67,
                            "name": "_candidateid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "709:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "724:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "709:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "_candidateid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "729:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "candidatecount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "745:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "729:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "709:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "701:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "701:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "779:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "785:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "785:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "779:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "799:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "779:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "779:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "813:37:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "candidates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "813:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$8_storage_$",
                            "typeString": "mapping(uint256 => struct Election.Candidate storage ref)"
                          }
                        },
                        "id": 85,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "_candidateid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "824:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "813:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Candidate_$8_storage",
                          "typeString": "struct Election.Candidate storage ref"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "813:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "813:37:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "_candidateid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "884:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89,
                      "name": "eventVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "874:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "EmitStatement",
                  "src": "869:28:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0121b93f",
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "_candidateid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 94,
                  "src": "629:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "628:19:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "654:0:0"
            },
            "scope": 95,
            "src": "615:289:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 96,
        "src": "25:881:0"
      }
    ],
    "src": "0:906:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50604080518082019091526005815264416c69636560d81b60208201526100369061005e565b6040805180820190915260038152622137b160e91b60208201526100599061005e565b61014d565b6001805481018082556040805160608101825282815260208082018681526000838501819052948552848252929093208151815591518051919492936100a9938501929101906100ba565b506040820151816002015590505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100fb57805160ff1916838001178555610128565b82800160010185558215610128579182015b8281111561012857825182559160200191906001019061010d565b50610134929150610138565b5090565b5b808211156101345760008155600101610139565b6102f78061015c6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630121b93f146100515780633477ee2e14610070578063af0dbe5414610113578063c8b94d691461014d575b600080fd5b61006e6004803603602081101561006757600080fd5b5035610167565b005b61008d6004803603602081101561008657600080fd5b50356101fc565b6040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156100d65781810151838201526020016100be565b50505050905090810190601f1680156101035780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6101396004803603602081101561012957600080fd5b50356001600160a01b03166102a6565b604080519115158252519081900360200190f35b6101556102bb565b60408051918252519081900360200190f35b3360009081526002602052604090205460ff161561018457600080fd5b60008111801561019657506001548111155b61019f57600080fd5b336000908152600260208181526040808420805460ff1916600190811790915585855291849052808420909201805490910190555182917f5190cbcb11a5b819d29d510204755e1304f26705e78d63e90e9befa7c78c164b91a250565b600060208181529181526040908190208054600180830180548551600293821615610100026000190190911692909204601f81018790048702830187019095528482529194929390928301828280156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b5050505050908060020154905083565b60026020526000908152604090205460ff1681565b6001548156fea2646970667358221220451d75e0cde52713a879ef0a4084ab0826df1d6cd57b6ed8767da9f31f96c11564736f6c634300060c0033",
  "bytecodeSha1": "0bbb0543d698c2297226c7137892212ca123aac9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "Election",
  "coverageMap": {
    "branches": {
      "0": {
        "Election.vote": {
          "5": [
            672,
            690,
            true
          ],
          "6": [
            709,
            725,
            false
          ],
          "7": [
            729,
            759,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Election.vote": {
          "0": [
            664,
            691
          ],
          "1": [
            701,
            760
          ],
          "2": [
            779,
            803
          ],
          "3": [
            813,
            850
          ],
          "4": [
            869,
            897
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630121b93f146100515780633477ee2e14610070578063af0dbe5414610113578063c8b94d691461014d575b600080fd5b61006e6004803603602081101561006757600080fd5b5035610167565b005b61008d6004803603602081101561008657600080fd5b50356101fc565b6040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156100d65781810151838201526020016100be565b50505050905090810190601f1680156101035780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6101396004803603602081101561012957600080fd5b50356001600160a01b03166102a6565b604080519115158252519081900360200190f35b6101556102bb565b60408051918252519081900360200190f35b3360009081526002602052604090205460ff161561018457600080fd5b60008111801561019657506001548111155b61019f57600080fd5b336000908152600260208181526040808420805460ff1916600190811790915585855291849052808420909201805490910190555182917f5190cbcb11a5b819d29d510204755e1304f26705e78d63e90e9befa7c78c164b91a250565b600060208181529181526040908190208054600180830180548551600293821615610100026000190190911692909204601f81018790048702830187019095528482529194929390928301828280156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b5050505050908060020154905083565b60026020526000908152604090205460ff1681565b6001548156fea2646970667358221220451d75e0cde52713a879ef0a4084ab0826df1d6cd57b6ed8767da9f31f96c11564736f6c634300060c0033",
  "deployedSourceMap": "25:881:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;615:289;;;;;;;;;;;;;;;;-1:-1:-1;615:289:0;;:::i;:::-;;148:45;;;;;;;;;;;;;;;;-1:-1:-1;148:45:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;231:38;;;;;;;;;;;;;;;;-1:-1:-1;231:38:0;-1:-1:-1;;;;;231:38:0;;:::i;:::-;;;;;;;;;;;;;;;;;;199:26;;;:::i;:::-;;;;;;;;;;;;;;;;615:289;679:10;673:17;;;;:5;:17;;;;;;;;672:18;664:27;;;;;;724:1;709:12;:16;:50;;;;;745:14;;729:12;:30;;709:50;701:59;;;;;;785:10;779:17;;;;:5;:17;;;;;;;;:24;;-1:-1:-1;;779:24:0;799:4;779:24;;;;;;813;;;;;;;;;;:34;;;:37;;;;;;;874:23;824:12;;874:23;;;615:289;:::o;148:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;148:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;231:38::-;;;;;;;;;;;;;;;:::o;199:26::-;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    906
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xAF0DBE54 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xC8B94D69 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x103 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x196 JUMPI POP PUSH1 0x1 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP6 DUP6 MSTORE SWAP2 DUP5 SWAP1 MSTORE DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0x5190CBCB11A5B819D29D510204755E1304F26705E78D63E90E9BEFA7C78C164B SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD DUP6 MLOAD PUSH1 0x2 SWAP4 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP4 ADD DUP8 ADD SWAP1 SWAP6 MSTORE DUP5 DUP3 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x26B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x296 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x279 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SAR PUSH22 0xE0CDE52713A879EF0A4084AB0826DF1D6CD57B6ED876 PUSH30 0xA9F31F96C11564736F6C634300060C003300000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x121B93F"
    },
    "38": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3477EE2E"
    },
    "49": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70"
    },
    "53": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAF0DBE54"
    },
    "60": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "64": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC8B94D69"
    },
    "71": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "75": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        25,
        906
      ],
      "op": "REVERT",
      "path": "0"
    },
    "81": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "82": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E"
    },
    "85": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "87": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "89": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "SUB",
      "path": "0"
    },
    "90": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "92": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "DUP2",
      "path": "0"
    },
    "93": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "LT",
      "path": "0"
    },
    "94": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "95": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67"
    },
    "98": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "99": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "101": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "REVERT",
      "path": "0"
    },
    "103": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "104": {
      "op": "POP"
    },
    "105": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "106": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "109": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        615,
        904
      ],
      "op": "JUMP",
      "path": "0"
    },
    "110": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "111": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "STOP",
      "path": "0"
    },
    "112": {
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "113": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D"
    },
    "116": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "118": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "119": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "120": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SUB",
      "path": "0"
    },
    "121": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "123": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "124": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "LT",
      "path": "0"
    },
    "125": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "126": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86"
    },
    "129": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "130": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "132": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "133": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "REVERT",
      "path": "0"
    },
    "134": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "135": {
      "op": "POP"
    },
    "136": {
      "offset": [
        148,
        193
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "137": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC"
    },
    "140": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        148,
        193
      ],
      "op": "JUMP",
      "path": "0"
    },
    "141": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "142": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "144": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "145": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP5",
      "path": "0"
    },
    "147": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "148": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "149": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "151": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "152": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "155": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "156": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "157": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "158": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "159": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "161": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "162": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "163": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "164": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SUB",
      "path": "0"
    },
    "165": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "166": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "167": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP5",
      "path": "0"
    },
    "168": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "169": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "170": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "171": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "172": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "173": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "175": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "176": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "177": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "178": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "179": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "180": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "181": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "183": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "184": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "185": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "187": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "188": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "190": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "191": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "192": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "193": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "LT",
      "path": "0"
    },
    "194": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "195": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6"
    },
    "198": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "199": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "200": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "201": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "202": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "203": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "204": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "205": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "206": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "207": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "209": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "210": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE"
    },
    "213": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMP",
      "path": "0"
    },
    "214": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "215": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "216": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "217": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "218": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "219": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "220": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "221": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "222": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "223": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "224": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "225": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "227": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "AND",
      "path": "0"
    },
    "228": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "229": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "230": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "233": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "236": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SUB",
      "path": "0"
    },
    "237": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "238": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "239": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "241": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "242": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "244": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SUB",
      "path": "0"
    },
    "245": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "248": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "EXP",
      "path": "0"
    },
    "249": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SUB",
      "path": "0"
    },
    "250": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "NOT",
      "path": "0"
    },
    "251": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "AND",
      "path": "0"
    },
    "252": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "253": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "254": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "256": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "257": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "258": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "259": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "261": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "262": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "263": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "264": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "265": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "266": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "267": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "269": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "270": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "271": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "272": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SUB",
      "path": "0"
    },
    "273": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "274": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "RETURN",
      "path": "0"
    },
    "275": {
      "offset": [
        231,
        269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139"
    },
    "279": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "281": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "DUP1",
      "path": "0"
    },
    "282": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "283": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "SUB",
      "path": "0"
    },
    "284": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "286": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "287": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "LT",
      "path": "0"
    },
    "288": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "289": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129"
    },
    "292": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "293": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "295": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "DUP1",
      "path": "0"
    },
    "296": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "REVERT",
      "path": "0"
    },
    "297": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "298": {
      "op": "POP"
    },
    "299": {
      "offset": [
        231,
        269
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "306": {
      "op": "SHL"
    },
    "307": {
      "op": "SUB"
    },
    "308": {
      "offset": [
        231,
        269
      ],
      "op": "AND",
      "path": "0"
    },
    "309": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "312": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        231,
        269
      ],
      "op": "JUMP",
      "path": "0"
    },
    "313": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "314": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "316": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "DUP1",
      "path": "0"
    },
    "317": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "318": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "319": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "320": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "321": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "DUP3",
      "path": "0"
    },
    "322": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "323": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "324": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "325": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "326": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "327": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "SUB",
      "path": "0"
    },
    "328": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "330": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "ADD",
      "path": "0"
    },
    "331": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "332": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "RETURN",
      "path": "0"
    },
    "333": {
      "offset": [
        199,
        225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155"
    },
    "337": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB"
    },
    "340": {
      "fn": "Election.vote",
      "jump": "i",
      "offset": [
        199,
        225
      ],
      "op": "JUMP",
      "path": "0"
    },
    "341": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "342": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "344": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "DUP1",
      "path": "0"
    },
    "345": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "346": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "347": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "DUP3",
      "path": "0"
    },
    "348": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "349": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "350": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "351": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "DUP2",
      "path": "0"
    },
    "352": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "353": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "SUB",
      "path": "0"
    },
    "354": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "356": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "ADD",
      "path": "0"
    },
    "357": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "358": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "RETURN",
      "path": "0"
    },
    "359": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "Election.vote",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "361": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "363": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "364": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "DUP2",
      "path": "0"
    },
    "365": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "366": {
      "fn": "Election.vote",
      "offset": [
        673,
        678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "368": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "370": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "371": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "373": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "374": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "375": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "376": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "378": {
      "fn": "Election.vote",
      "offset": [
        673,
        690
      ],
      "op": "AND",
      "path": "0"
    },
    "379": {
      "branch": 5,
      "fn": "Election.vote",
      "offset": [
        672,
        690
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "380": {
      "fn": "Election.vote",
      "offset": [
        664,
        691
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "383": {
      "branch": 5,
      "fn": "Election.vote",
      "offset": [
        664,
        691
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "384": {
      "fn": "Election.vote",
      "offset": [
        664,
        691
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "386": {
      "fn": "Election.vote",
      "offset": [
        664,
        691
      ],
      "op": "DUP1",
      "path": "0"
    },
    "387": {
      "fn": "Election.vote",
      "offset": [
        664,
        691
      ],
      "op": "REVERT",
      "path": "0"
    },
    "388": {
      "fn": "Election.vote",
      "offset": [
        664,
        691
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "Election.vote",
      "offset": [
        724,
        725
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "391": {
      "fn": "Election.vote",
      "offset": [
        709,
        721
      ],
      "op": "DUP2",
      "path": "0"
    },
    "392": {
      "branch": 6,
      "fn": "Election.vote",
      "offset": [
        709,
        725
      ],
      "op": "GT",
      "path": "0"
    },
    "393": {
      "fn": "Election.vote",
      "offset": [
        709,
        759
      ],
      "op": "DUP1",
      "path": "0"
    },
    "394": {
      "fn": "Election.vote",
      "offset": [
        709,
        759
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "395": {
      "fn": "Election.vote",
      "offset": [
        709,
        759
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196"
    },
    "398": {
      "branch": 6,
      "fn": "Election.vote",
      "offset": [
        709,
        759
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "399": {
      "fn": "Election.vote",
      "offset": [
        709,
        759
      ],
      "op": "POP",
      "path": "0"
    },
    "400": {
      "fn": "Election.vote",
      "offset": [
        745,
        759
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "402": {
      "fn": "Election.vote",
      "offset": [
        745,
        759
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "403": {
      "fn": "Election.vote",
      "offset": [
        729,
        741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "404": {
      "fn": "Election.vote",
      "offset": [
        729,
        759
      ],
      "op": "GT",
      "path": "0"
    },
    "405": {
      "branch": 7,
      "fn": "Election.vote",
      "offset": [
        729,
        759
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "406": {
      "fn": "Election.vote",
      "offset": [
        709,
        759
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "407": {
      "fn": "Election.vote",
      "offset": [
        701,
        760
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F"
    },
    "410": {
      "branch": 7,
      "fn": "Election.vote",
      "offset": [
        701,
        760
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "411": {
      "fn": "Election.vote",
      "offset": [
        701,
        760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "413": {
      "fn": "Election.vote",
      "offset": [
        701,
        760
      ],
      "op": "DUP1",
      "path": "0"
    },
    "414": {
      "fn": "Election.vote",
      "offset": [
        701,
        760
      ],
      "op": "REVERT",
      "path": "0"
    },
    "415": {
      "fn": "Election.vote",
      "offset": [
        701,
        760
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "416": {
      "fn": "Election.vote",
      "offset": [
        785,
        795
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "417": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "419": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "420": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "421": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "422": {
      "fn": "Election.vote",
      "offset": [
        779,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "424": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "426": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "427": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "428": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "429": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "431": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "432": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "DUP5",
      "path": "0"
    },
    "433": {
      "fn": "Election.vote",
      "offset": [
        779,
        796
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "434": {
      "fn": "Election.vote",
      "offset": [
        779,
        803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "435": {
      "fn": "Election.vote",
      "offset": [
        779,
        803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "436": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "438": {
      "op": "NOT"
    },
    "439": {
      "fn": "Election.vote",
      "offset": [
        779,
        803
      ],
      "op": "AND",
      "path": "0"
    },
    "440": {
      "fn": "Election.vote",
      "offset": [
        799,
        803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "442": {
      "fn": "Election.vote",
      "offset": [
        779,
        803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "443": {
      "fn": "Election.vote",
      "offset": [
        779,
        803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "444": {
      "fn": "Election.vote",
      "offset": [
        779,
        803
      ],
      "op": "OR",
      "path": "0"
    },
    "445": {
      "fn": "Election.vote",
      "offset": [
        779,
        803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "446": {
      "fn": "Election.vote",
      "offset": [
        779,
        803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "447": {
      "fn": "Election.vote",
      "offset": [
        779,
        803
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "448": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 3
    },
    "449": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "DUP6",
      "path": "0"
    },
    "450": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "451": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "452": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "DUP5",
      "path": "0"
    },
    "453": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "454": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "455": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "DUP1",
      "path": "0"
    },
    "456": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "DUP5",
      "path": "0"
    },
    "457": {
      "fn": "Election.vote",
      "offset": [
        813,
        837
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "458": {
      "fn": "Election.vote",
      "offset": [
        813,
        847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "Election.vote",
      "offset": [
        813,
        847
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "460": {
      "fn": "Election.vote",
      "offset": [
        813,
        847
      ],
      "op": "ADD",
      "path": "0"
    },
    "461": {
      "fn": "Election.vote",
      "offset": [
        813,
        850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "462": {
      "fn": "Election.vote",
      "offset": [
        813,
        850
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "463": {
      "fn": "Election.vote",
      "offset": [
        813,
        850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "464": {
      "fn": "Election.vote",
      "offset": [
        813,
        850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "465": {
      "fn": "Election.vote",
      "offset": [
        813,
        850
      ],
      "op": "ADD",
      "path": "0"
    },
    "466": {
      "fn": "Election.vote",
      "offset": [
        813,
        850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "467": {
      "fn": "Election.vote",
      "offset": [
        813,
        850
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "468": {
      "fn": "Election.vote",
      "offset": [
        874,
        897
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 4
    },
    "469": {
      "fn": "Election.vote",
      "offset": [
        824,
        836
      ],
      "op": "DUP3",
      "path": "0"
    },
    "470": {
      "fn": "Election.vote",
      "offset": [
        824,
        836
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "471": {
      "fn": "Election.vote",
      "offset": [
        874,
        897
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x5190CBCB11A5B819D29D510204755E1304F26705E78D63E90E9BEFA7C78C164B"
    },
    "504": {
      "fn": "Election.vote",
      "offset": [
        874,
        897
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "505": {
      "fn": "Election.vote",
      "offset": [
        874,
        897
      ],
      "op": "LOG2",
      "path": "0"
    },
    "506": {
      "fn": "Election.vote",
      "offset": [
        615,
        904
      ],
      "op": "POP",
      "path": "0"
    },
    "507": {
      "fn": "Election.vote",
      "jump": "o",
      "offset": [
        615,
        904
      ],
      "op": "JUMP",
      "path": "0"
    },
    "508": {
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "509": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "511": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "513": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "514": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "515": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "516": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "517": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "518": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "519": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "521": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "522": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "523": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "524": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "525": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "526": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "527": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "529": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "530": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "531": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "532": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "533": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "534": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP6",
      "path": "0"
    },
    "535": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "536": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "538": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "539": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "540": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "AND",
      "path": "0"
    },
    "541": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "542": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "545": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MUL",
      "path": "0"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "548": {
      "op": "NOT"
    },
    "549": {
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "550": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "551": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "552": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "AND",
      "path": "0"
    },
    "553": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "554": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "555": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "556": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DIV",
      "path": "0"
    },
    "557": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "559": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "560": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "561": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP8",
      "path": "0"
    },
    "562": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "563": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DIV",
      "path": "0"
    },
    "564": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP8",
      "path": "0"
    },
    "565": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MUL",
      "path": "0"
    },
    "566": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "567": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "568": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP8",
      "path": "0"
    },
    "569": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "570": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "571": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "572": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "573": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP5",
      "path": "0"
    },
    "574": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "575": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "576": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "577": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "578": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "579": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "580": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "581": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "582": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "583": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "584": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "585": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "586": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "587": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "588": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "591": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "592": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "593": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "595": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "LT",
      "path": "0"
    },
    "596": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "599": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "600": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "603": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "604": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "605": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "606": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DIV",
      "path": "0"
    },
    "607": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MUL",
      "path": "0"
    },
    "608": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "609": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "610": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "611": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "613": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "614": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "615": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "618": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMP",
      "path": "0"
    },
    "619": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "620": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "621": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "622": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "623": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "624": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "626": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "627": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "629": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "631": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "632": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "633": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "634": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "635": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "636": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "637": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "638": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "639": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "641": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "642": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "643": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "645": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "646": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "647": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "648": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "GT",
      "path": "0"
    },
    "649": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279"
    },
    "652": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "653": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "654": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "655": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SUB",
      "path": "0"
    },
    "656": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "658": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "AND",
      "path": "0"
    },
    "659": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP3",
      "path": "0"
    },
    "660": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "661": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "662": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "663": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "664": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "665": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "666": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "667": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "668": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "669": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP1",
      "path": "0"
    },
    "670": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "672": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "ADD",
      "path": "0"
    },
    "673": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "674": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "675": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "POP",
      "path": "0"
    },
    "676": {
      "fn": "Election.vote",
      "offset": [
        148,
        193
      ],
      "op": "DUP4",
      "path": "0"
    },
    "677": {
      "fn": "Election.vote",
      "jump": "o",
      "offset": [
        148,
        193
      ],
      "op": "JUMP",
      "path": "0"
    },
    "678": {
      "offset": [
        231,
        269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "681": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "683": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "684": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "686": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "687": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "688": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "689": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "691": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "692": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "693": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "694": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "696": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "AND",
      "path": "0"
    },
    "697": {
      "fn": "Election.vote",
      "offset": [
        231,
        269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "698": {
      "fn": "Election.vote",
      "jump": "o",
      "offset": [
        231,
        269
      ],
      "op": "JUMP",
      "path": "0"
    },
    "699": {
      "offset": [
        199,
        225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "700": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "702": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "703": {
      "fn": "Election.vote",
      "offset": [
        199,
        225
      ],
      "op": "DUP2",
      "path": "0"
    },
    "704": {
      "fn": "Election.vote",
      "jump": "o",
      "offset": [
        199,
        225
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "4949030f98b67aae98273d276dfaaaaea53e7813",
  "source": "pragma solidity ^0.6.6;\n\ncontract Election{\n    \n    struct Candidate{\n        uint id;\n        string name;\n        uint voteCount;\n    }\n    \n    mapping (uint => Candidate) public candidates;\n    uint public candidatecount;\n    mapping (address => bool) public voter;\n    \n    event eventVote(\n        uint indexed _candidateid\n        );\n    \n    constructor() public{\n        addCandidate(\"Alice\");\n        addCandidate(\"Bob\");\n    }\n    \n    function addCandidate(string memory _name) private{\n        candidatecount++;\n        candidates[candidatecount] = Candidate(candidatecount, _name, 0);\n    }\n    \n    function vote(uint _candidateid) public{\n        require(!voter[msg.sender]);\n        require(_candidateid > 0 && _candidateid <= candidatecount);\n        \n        voter[msg.sender] = true;\n        candidates[_candidateid].voteCount ++;\n        \n        emit eventVote(_candidateid);\n    }\n}",
  "sourceMap": "25:881:0:-:0;;;351:87;;;;;;;;;-1:-1:-1;381:21:0;;;;;;;;;;;;-1:-1:-1;;;381:21:0;;;;;;:12;:21::i;:::-;412:19;;;;;;;;;;;;-1:-1:-1;;;412:19:0;;;;;;:12;:19::i;:::-;25:881;;448:157;508:14;:16;;;;;;;563:35;;;;;;;;;;;;;;;;;;508:14;563:35;;;;;;534:26;;;;;;;;;;:64;;;;;;;;563:35;;534:26;;:64;;;;;;;;;:::i;:::-;;;;;;;;;;;;;448:157;:::o;25:881::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25:881:0;;;-1:-1:-1;25:881:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Voting.sol",
  "type": "contract"
}